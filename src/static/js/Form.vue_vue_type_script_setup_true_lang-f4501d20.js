import{d as e,ad as a,u as o,fg as r,M as t,gB as l,o as n,p as s,l as d,j as i,k as m,V as c,gC as u,gD as g,ah as p}from"./index-920db443.js";import{b as f,B as h}from"./index-143f5813.js";import{u as b,B as F}from"./useForm-1d28ee0b.js";import"./componentMap-c91676b4.js";import{f as x}from"./formValidate-c8ab8d29.js";const C=e({__name:"Form",emits:["register","reload"],setup(e,{emit:C}){const M=C,k=a({dataForm:{id:"",fullName:"",enCode:"",type:"",enabledMark:1,globalMark:null,organizeIdsTree:[],sortCode:0,description:""}}),[I,{setFieldsValue:T,resetFields:V,validate:j,clearValidate:y}]=b({schemas:[{field:"fullName",label:"角色名称",component:"Input",componentProps:{placeholder:"请输入",maxlength:50},rules:[{required:!0,trigger:"blur",message:"必填"},{validator:x("fullName","不能含有特殊符号"),trigger:"blur"}]},{field:"enCode",label:"角色编码",component:"Input",componentProps:{placeholder:"请输入",maxlength:50},rules:[{required:!0,trigger:"blur",message:"必填"},{validator:x("enCode","只能输入英文、数字和小数点且小数点不能放在首尾"),trigger:"blur"}]},{field:"globalMark",label:"角色类型",defaultValue:1,component:"Select",componentProps:{placeholder:"请选择",options:[{id:1,fullName:"全局"},{id:0,fullName:"组织"}],onChange:function(){T({organizeIdsTree:[]}),y("organizeIdsTree")},allowClear:!1},rules:[{required:!0,trigger:"change",message:"必填",type:"number"}]},{field:"organizeIdsTree",label:"所属组织",component:"OrganizeSelect",componentProps:{placeholder:"请选择",multiple:!0,auth:!0},rules:[{required:!0,trigger:"change",message:"必填",type:"array"}],ifShow:({values:e})=>0===e.globalMark},{field:"sortCode",label:"排序",defaultValue:0,component:"InputNumber",componentProps:{min:0,max:999999}},{field:"enabledMark",label:"状态",defaultValue:1,component:"Switch"},{field:"description",label:"说明",component:"Textarea",componentProps:{placeholder:"请输入"}}]}),[N,{closeModal:P,changeLoading:v,changeOkLoading:w}]=f((function(e){V(),k.dataForm.id=e.id,k.dataForm.id&&(v(!0),l(k.dataForm.id).then((e=>{T(e.data),v(!1)})))})),{createMessage:z}=p(),{t:S}=o(),q=r(),O=t((()=>k.dataForm.id?S("common.editText"):S("common.addText")));async function R(){const e=await j();if(!e)return;w(!0);const a={...k.dataForm,...e};(k.dataForm.id?u:g)(a).then((e=>{z.success(e.msg),w(!1),q.resetState(),P(),M("reload")})).catch((()=>{w(!1)}))}return(e,a)=>(n(),s(m(h),c(e.$attrs,{onRegister:m(N),title:O.value,onOk:R,destroyOnClose:""}),{default:d((()=>[i(m(F),{onRegister:m(I)},null,8,["onRegister"])])),_:1},16,["onRegister","title"]))}});export{C as _};
